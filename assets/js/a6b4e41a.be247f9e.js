"use strict";(self.webpackChunksynmetrix=self.webpackChunksynmetrix||[]).push([[1128],{3905:(e,r,t)=>{t.d(r,{Zo:()=>d,kt:()=>k});var n=t(7294);function o(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function a(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function s(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?a(Object(t),!0).forEach((function(r){o(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function i(e,r){if(null==e)return{};var t,n,o=function(e,r){if(null==e)return{};var t,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||(o[t]=e[t]);return o}(e,r);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var c=n.createContext({}),l=function(e){var r=n.useContext(c),t=r;return e&&(t="function"==typeof e?e(r):s(s({},r),e)),t},d=function(e){var r=l(e.components);return n.createElement(c.Provider,{value:r},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},m=n.forwardRef((function(e,r){var t=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),p=l(t),m=o,k=p["".concat(c,".").concat(m)]||p[m]||u[m]||a;return t?n.createElement(k,s(s({ref:r},d),{},{components:t})):n.createElement(k,s({ref:r},d))}));function k(e,r){var t=arguments,o=r&&r.mdxType;if("string"==typeof e||o){var a=t.length,s=new Array(a);s[0]=m;var i={};for(var c in r)hasOwnProperty.call(r,c)&&(i[c]=r[c]);i.originalType=e,i[p]="string"==typeof e?e:o,s[1]=i;for(var l=2;l<a;l++)s[l]=t[l];return n.createElement.apply(null,s)}return n.createElement.apply(null,t)}m.displayName="MDXCreateElement"},848:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>c,contentTitle:()=>s,default:()=>u,frontMatter:()=>a,metadata:()=>i,toc:()=>l});var n=t(7462),o=(t(7294),t(3905));const a={id:"docker-swarm",title:"Docker Swarm deployment guide",slug:"/docker-swarm",sidebar_label:"Docker Swarm"},s="Docker Swarm deployment guide",i={unversionedId:"production-deployment/docker-swarm/docker-swarm",id:"version-1.0.0/production-deployment/docker-swarm/docker-swarm",title:"Docker Swarm deployment guide",description:"Run containers locally (staging mode)",source:"@site/versioned_docs/version-1.0.0/production-deployment/docker-swarm/index.md",sourceDirName:"production-deployment/docker-swarm",slug:"/docker-swarm",permalink:"/docs/docker-swarm",draft:!1,editUrl:"https://github.com/mlcraft-io/docs/tree/main/versioned_docs/version-1.0.0/production-deployment/docker-swarm/index.md",tags:[],version:"1.0.0",frontMatter:{id:"docker-swarm",title:"Docker Swarm deployment guide",slug:"/docker-swarm",sidebar_label:"Docker Swarm"},sidebar:"tutorialSidebar",previous:{title:"Production Deployment",permalink:"/docs/production-deployment"},next:{title:"Requirements",permalink:"/docs/production-deployment/requirements/"}},c={},l=[{value:"Run containers locally (staging mode)",id:"run-containers-locally-staging-mode",level:2},{value:"Destroy stack",id:"destroy-stack",level:3},{value:"Show logs",id:"show-logs",level:3},{value:"Show stack tasks status",id:"show-stack-tasks-status",level:3},{value:"Bugs",id:"bugs",level:3}],d={toc:l},p="wrapper";function u(e){let{components:r,...t}=e;return(0,o.kt)(p,(0,n.Z)({},d,t,{components:r,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"docker-swarm-deployment-guide"},"Docker Swarm deployment guide"),(0,o.kt)("h2",{id:"run-containers-locally-staging-mode"},"Run containers locally (staging mode)"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"docker swarm init\n\n# if needed\n# docker network rm mlcraft_default\n\n./create-overlay-network.sh\n\n./run-registry.sh\n\n# build images and push\nDOMAIN=localhost REGISTRY_HOST=127.0.0.1:50001 python3 cli.py --env stage services push\n\n# up the stack\nDOMAIN=localhost REGISTRY_HOST=127.0.0.1:50001 python3 cli.py --env stage services up mlcraft_bi\n")),(0,o.kt)("admonition",{type:"note"},(0,o.kt)("p",{parentName:"admonition"},"default docker registry url is ",(0,o.kt)("inlineCode",{parentName:"p"},"index.docker.io"))),(0,o.kt)("p",null,"Then run migrations:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"./migrate.sh\n")),(0,o.kt)("h3",{id:"destroy-stack"},"Destroy stack"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"python3 cli.py --env stage services destroy mlcraft_bi\n")),(0,o.kt)("h3",{id:"show-logs"},"Show logs"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"python3 cli.py --env stage services logs mlcraft_bi_hasura\n")),(0,o.kt)("h3",{id:"show-stack-tasks-status"},"Show stack tasks status"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"python3 cli.py --env stage services ps mlcraft_bi\n")),(0,o.kt)("h3",{id:"bugs"},"Bugs"),(0,o.kt)("p",null,"If you see:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"failed to create service app_nginx: Error response from daemon: rpc error: code = FailedPrecondition desc = service needs ingress network, but no ingress network is present\n\n")),(0,o.kt)("p",null,"Just create the ingress network:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"docker network create --ingress --driver overlay ingress\n")))}u.isMDXComponent=!0}}]);