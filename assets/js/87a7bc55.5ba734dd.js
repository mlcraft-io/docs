"use strict";(self.webpackChunksynmetrix=self.webpackChunksynmetrix||[]).push([[8405],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>g});var a=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function d(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},i=Object.keys(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var o=a.createContext({}),l=function(e){var t=a.useContext(o),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},u=function(e){var t=l(e.components);return a.createElement(o.Provider,{value:t},e.children)},c="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},h=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,i=e.originalType,o=e.parentName,u=d(e,["components","mdxType","originalType","parentName"]),c=l(r),h=n,g=c["".concat(o,".").concat(h)]||c[h]||p[h]||i;return r?a.createElement(g,s(s({ref:t},u),{},{components:r})):a.createElement(g,s({ref:t},u))}));function g(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=r.length,s=new Array(i);s[0]=h;var d={};for(var o in t)hasOwnProperty.call(t,o)&&(d[o]=t[o]);d.originalType=e,d[c]="string"==typeof e?e:n,s[1]=d;for(var l=2;l<i;l++)s[l]=r[l];return a.createElement.apply(null,s)}return a.createElement.apply(null,r)}h.displayName="MDXCreateElement"},5484:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>o,contentTitle:()=>s,default:()=>p,frontMatter:()=>i,metadata:()=>d,toc:()=>l});var a=r(7462),n=(r(7294),r(3905));const i={id:"druid",title:"Druid",slug:"/testing-and-debugging/tests/data-source/druid",sidebar_label:"Druid"},s="Druid Setup Guide",d={unversionedId:"testing-and-debugging /tests/data-source/druid/druid",id:"version-1.0.0/testing-and-debugging /tests/data-source/druid/druid",title:"Druid",description:"Step 1: Navigate to the Druid example directory",source:"@site/versioned_docs/version-1.0.0/testing-and-debugging /tests/data-source/druid/index.md",sourceDirName:"testing-and-debugging /tests/data-source/druid",slug:"/testing-and-debugging/tests/data-source/druid",permalink:"/docs/testing-and-debugging/tests/data-source/druid",draft:!1,editUrl:"https://github.com/mlcraft-io/docs/tree/main/versioned_docs/version-1.0.0/testing-and-debugging /tests/data-source/druid/index.md",tags:[],version:"1.0.0",frontMatter:{id:"druid",title:"Druid",slug:"/testing-and-debugging/tests/data-source/druid",sidebar_label:"Druid"},sidebar:"tutorialSidebar",previous:{title:"Dremio",permalink:"/docs/testing-and-debugging/tests/data-source/dremio"},next:{title:"Elasticsearch",permalink:"/docs/testing-and-debugging/tests/data-source/elasticsearch"}},o={},l=[{value:"Step 1: Navigate to the Druid example directory",id:"step-1-navigate-to-the-druid-example-directory",level:2},{value:"Step 2: Run the Druid services using the script",id:"step-2-run-the-druid-services-using-the-script",level:2},{value:"Step 3: Check the services",id:"step-3-check-the-services",level:2},{value:"Step 4: Load example data",id:"step-4-load-example-data",level:2},{value:"Step 5: Create a new Druid datasource in Synmetrix",id:"step-5-create-a-new-druid-datasource-in-synmetrix",level:2}],u={toc:l},c="wrapper";function p(e){let{components:t,...i}=e;return(0,n.kt)(c,(0,a.Z)({},u,i,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"druid-setup-guide"},"Druid Setup Guide"),(0,n.kt)("h2",{id:"step-1-navigate-to-the-druid-example-directory"},"Step 1: Navigate to the Druid example directory"),(0,n.kt)("p",null,"Navigate to the Druid example directory located at ",(0,n.kt)("inlineCode",{parentName:"p"},"/docs/examples/druid")," in the root of the Synmetrix project. You can also download this directory from the GitHub repository. To navigate to the directory, run the following command:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"cd ./docs/examples/druid\n")),(0,n.kt)("h2",{id:"step-2-run-the-druid-services-using-the-script"},"Step 2: Run the Druid services using the script"),(0,n.kt)("p",null,"In the Druid example directory, there is a script called ",(0,n.kt)("inlineCode",{parentName:"p"},"run_druid.sh"),". Make sure the script is executable by running:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"chmod +x run_druid.sh\n")),(0,n.kt)("p",null,"Then, start the Druid services by running the script:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"./run_druid.sh\n")),(0,n.kt)("p",null,"After the script has finished running, it will return the host IP address of your machine. Take note of this IP address for the next step."),(0,n.kt)("p",null,"Wait for the cluster to start and go to http://localhost:8889."),(0,n.kt)("h2",{id:"step-3-check-the-services"},"Step 3: Check the services"),(0,n.kt)("p",null,"Go to the Services tab and make sure all services are online, as shown in the screenshot below."),(0,n.kt)("p",null,(0,n.kt)("img",{alt:"All services online",src:r(298).Z,width:"1595",height:"472"})),(0,n.kt)("h2",{id:"step-4-load-example-data"},"Step 4: Load example data"),(0,n.kt)("p",null,'Select the "Load data" tab, then choose "Batch - classic" from the dropdown menu.'),(0,n.kt)("p",null,(0,n.kt)("img",{alt:"Load data -&gt; Batch - classic",src:r(6417).Z,width:"714",height:"310"})),(0,n.kt)("p",null,'Next, select the "Example data" tile and click "Load example".'),(0,n.kt)("p",null,(0,n.kt)("img",{alt:"Load example data",src:r(5909).Z,width:"1594",height:"476"})),(0,n.kt)("p",null,'Click the button with the text "Next: ..." in the bottom right corner until the data starts loading (about 9 times).\nWhen the data starts loading, you will be redirected to the Ingestion tab and see the message "Task submitted successfully. Going to task view...".'),(0,n.kt)("p",null,(0,n.kt)("img",{alt:"Next button",src:r(4154).Z,width:"1592",height:"720"})),(0,n.kt)("p",null,"After the data has finished loading, the task status will change to SUCCESS."),(0,n.kt)("h2",{id:"step-5-create-a-new-druid-datasource-in-synmetrix"},"Step 5: Create a new Druid datasource in Synmetrix"),(0,n.kt)("p",null,"Fill out the form with the following information:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Name: Druid test datasource"),(0,n.kt)("li",{parentName:"ul"},"Host: Host IP (obtained from the script in Step 2)"),(0,n.kt)("li",{parentName:"ul"},"Port: 8082")),(0,n.kt)("p",null,'Currently, the Test Connection feature is not implemented and always returns "OK". To ensure functionality, generate a schema and request any data in the Explore tab.'))}p.isMDXComponent=!0},298:(e,t,r)=>{r.d(t,{Z:()=>a});const a=r.p+"assets/images/druid1-38454747c34a65f6e47d117f89c0a95c.png"},6417:(e,t,r)=>{r.d(t,{Z:()=>a});const a=r.p+"assets/images/druid2-7b6088b407c109f7e12f77eafa657a40.png"},5909:(e,t,r)=>{r.d(t,{Z:()=>a});const a=r.p+"assets/images/druid3-b95645dfb3f7fe774ab8c50e2751bc0c.png"},4154:(e,t,r)=>{r.d(t,{Z:()=>a});const a=r.p+"assets/images/druid4-0f1b8e4acc9ba87988c66c97ba3c912c.png"}}]);