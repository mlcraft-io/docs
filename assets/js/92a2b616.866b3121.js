"use strict";(self.webpackChunksynmetrix=self.webpackChunksynmetrix||[]).push([[6355],{3905:(e,t,a)=>{a.d(t,{Zo:()=>u,kt:()=>g});var r=a(7294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},i=Object.keys(e);for(r=0;r<i.length;r++)a=i[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)a=i[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var c=r.createContext({}),d=function(e){var t=r.useContext(c),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},u=function(e){var t=d(e.components);return r.createElement(c.Provider,{value:t},e.children)},l="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},b=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,i=e.originalType,c=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),l=d(a),b=n,g=l["".concat(c,".").concat(b)]||l[b]||p[b]||i;return a?r.createElement(g,o(o({ref:t},u),{},{components:a})):r.createElement(g,o({ref:t},u))}));function g(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=a.length,o=new Array(i);o[0]=b;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s[l]="string"==typeof e?e:n,o[1]=s;for(var d=2;d<i;d++)o[d]=a[d];return r.createElement.apply(null,o)}return r.createElement.apply(null,a)}b.displayName="MDXCreateElement"},2447:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>p,frontMatter:()=>i,metadata:()=>s,toc:()=>d});var r=a(7462),n=(a(7294),a(3905));const i={id:"databricks",title:"Databricks",slug:"/usage/user-guide/data-source/databricks",sidebar_label:"Databricks"},o="Connecting to Databricks Datasource via JDBC",s={unversionedId:"testing-and-debugging /tests/data-source/databricks/databricks",id:"version-1.0.0/testing-and-debugging /tests/data-source/databricks/databricks",title:"Databricks",description:"To connect to a Databricks datasource via JDBC, you will need the following information:",source:"@site/versioned_docs/version-1.0.0/testing-and-debugging /tests/data-source/databricks/index.md",sourceDirName:"testing-and-debugging /tests/data-source/databricks",slug:"/usage/user-guide/data-source/databricks",permalink:"/docs/usage/user-guide/data-source/databricks",draft:!1,editUrl:"https://github.com/mlcraft-io/docs/tree/main/versioned_docs/version-1.0.0/testing-and-debugging /tests/data-source/databricks/index.md",tags:[],version:"1.0.0",frontMatter:{id:"databricks",title:"Databricks",slug:"/usage/user-guide/data-source/databricks",sidebar_label:"Databricks"},sidebar:"tutorialSidebar",previous:{title:"CrateDB",permalink:"/docs/testing-and-debugging/tests/data-source/crate"},next:{title:"Dremio",permalink:"/docs/testing-and-debugging/tests/data-source/dremio"}},c={},d=[],u={toc:d},l="wrapper";function p(e){let{components:t,...a}=e;return(0,n.kt)(l,(0,r.Z)({},u,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"connecting-to-databricks-datasource-via-jdbc"},"Connecting to Databricks Datasource via JDBC"),(0,n.kt)("p",null,"To connect to a Databricks datasource via JDBC, you will need the following information:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"Access Token: A personal access token used to authenticate the Databricks connection.")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"Databricks JDBC URL: The URL for a JDBC connection. It should be in the format:"),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-jsx"},"jdbc:databricks://{'<Databricks address>'}:443/default;transportMode=http;ssl=1;\n"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"Database Name: The name of the database to connect to."))))}p.isMDXComponent=!0}}]);