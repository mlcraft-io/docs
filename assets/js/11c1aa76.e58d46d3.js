"use strict";(self.webpackChunksynmetrix=self.webpackChunksynmetrix||[]).push([[9934],{3905:(e,t,r)=>{r.d(t,{Zo:()=>d,kt:()=>k});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var i=n.createContext({}),l=function(e){var t=n.useContext(i),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},d=function(e){var t=l(e.components);return n.createElement(i.Provider,{value:t},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,i=e.parentName,d=c(e,["components","mdxType","originalType","parentName"]),p=l(r),m=o,k=p["".concat(i,".").concat(m)]||p[m]||u[m]||a;return r?n.createElement(k,s(s({ref:t},d),{},{components:r})):n.createElement(k,s({ref:t},d))}));function k(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,s=new Array(a);s[0]=m;var c={};for(var i in t)hasOwnProperty.call(t,i)&&(c[i]=t[i]);c.originalType=e,c[p]="string"==typeof e?e:o,s[1]=c;for(var l=2;l<a;l++)s[l]=r[l];return n.createElement.apply(null,s)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},891:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>i,contentTitle:()=>s,default:()=>u,frontMatter:()=>a,metadata:()=>c,toc:()=>l});var n=r(7462),o=(r(7294),r(3905));const a={id:"docker-swarm",title:"ocker Swarm deployment guide",slug:"/docker-swarm",sidebar_label:"Docker Swarm"},s="Docker Swarm deployment guide",c={unversionedId:"production-deployment/docker-swarm/docker-swarm",id:"production-deployment/docker-swarm/docker-swarm",title:"ocker Swarm deployment guide",description:"Run containers locally (staging mode)",source:"@site/docs/production-deployment/docker-swarm/index.md",sourceDirName:"production-deployment/docker-swarm",slug:"/docker-swarm",permalink:"/docs/next/docker-swarm",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/production-deployment/docker-swarm/index.md",tags:[],version:"current",frontMatter:{id:"docker-swarm",title:"ocker Swarm deployment guide",slug:"/docker-swarm",sidebar_label:"Docker Swarm"},sidebar:"tutorialSidebar",previous:{title:"Production Deployment",permalink:"/docs/next/production-deployment"},next:{title:"Requirements",permalink:"/docs/next/production-deployment/requirements/"}},i={},l=[{value:"Run containers locally (staging mode)",id:"run-containers-locally-staging-mode",level:2},{value:"Destroy stack",id:"destroy-stack",level:3},{value:"Show logs",id:"show-logs",level:3},{value:"Show stack tasks status",id:"show-stack-tasks-status",level:3},{value:"Bugs",id:"bugs",level:3}],d={toc:l},p="wrapper";function u(e){let{components:t,...r}=e;return(0,o.kt)(p,(0,n.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"docker-swarm-deployment-guide"},"Docker Swarm deployment guide"),(0,o.kt)("h2",{id:"run-containers-locally-staging-mode"},"Run containers locally (staging mode)"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"docker swarm init\n\n# if needed\n# docker network rm mlcraft_default\n\n./create-overlay-network.sh\n\n./run-registry.sh\n\n# build images and push\nDOMAIN=localhost REGISTRY_HOST=127.0.0.1:50001 python3 cli.py --env stage services push\n\n# up the stack\nDOMAIN=localhost REGISTRY_HOST=127.0.0.1:50001 python3 cli.py --env stage services up mlcraft_bi\n")),(0,o.kt)("admonition",{type:"note"},(0,o.kt)("p",{parentName:"admonition"},"default docker registry url is ",(0,o.kt)("inlineCode",{parentName:"p"},"index.docker.io"))),(0,o.kt)("p",null,"Then run migrations:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"./migrate.sh\n")),(0,o.kt)("h3",{id:"destroy-stack"},"Destroy stack"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"python3 cli.py --env stage services destroy mlcraft_bi\n")),(0,o.kt)("h3",{id:"show-logs"},"Show logs"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"python3 cli.py --env stage services logs mlcraft_bi_hasura\n")),(0,o.kt)("h3",{id:"show-stack-tasks-status"},"Show stack tasks status"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"python3 cli.py --env stage services ps mlcraft_bi\n")),(0,o.kt)("h3",{id:"bugs"},"Bugs"),(0,o.kt)("p",null,"If you see:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"failed to create service app_nginx: Error response from daemon: rpc error: code = FailedPrecondition desc = service needs ingress network, but no ingress network is present\n\n")),(0,o.kt)("p",null,"Just create the ingress network:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"docker network create --ingress --driver overlay ingress\n")))}u.isMDXComponent=!0}}]);